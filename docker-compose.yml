version: '3.9'
name: e-commerce-com-django-e-react
services:
  db:
    image: postgres:15
    container_name: postgres_e-commerce
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - e-commerce-postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - e-commerce-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_django
    command: ./backend/wait-for-it.sh sh -c "python ./backend/manage.py migrate && python ./backend/manage.py seed_data && python ./backend/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file: .env
    environment:
      DATABASE_HOST: ${DB_HOST}
      DATABASE_NAME: ${DB_NAME}
      DATABASE_USER: ${DB_USER}
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_PORT: ${DB_PORT}
    networks:
      - e-commerce-network
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_react
    command: npm start
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - e-commerce-network

volumes:
  e-commerce-postgres_data:
    name: e-commerce-postgres_data

networks:
  e-commerce-network:
    name: e-commerce-network